{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data: () => ({\n    bpm: 1,\n    id: '',\n    products: [] // Initialize products as an empty array\n  }),\n  methods: {\n    decrement() {\n      if (this.bpm > 1) {\n        this.bpm--;\n      }\n    },\n    increment() {\n      this.bpm++;\n    },\n    fetchProducts() {\n      axios.get('http://localhost:3000/products').then(response => {\n        this.products = response.data.data; // Assuming the data is in response.data.data\n        console.log(response.data.data);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    },\n    closeData() {\n      this.id = '';\n      this.postdata = {\n        ...this.postdefault\n      };\n      this.dialogedit = false;\n    },\n    async savePostdata() {\n      try {\n        const {\n          data\n        } = await this.axios.post('http://localhost:3000/products/', +this.id + this.orders, this.postdata);\n        console.log(data);\n        alert('creat complete');\n        this.fetchProducts();\n        this.closeData();\n      } catch (error) {\n        console.log(error);\n        alert('error');\n      }\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  }\n};","map":{"version":3,"names":["axios","data","bpm","id","products","methods","decrement","increment","fetchProducts","get","then","response","console","log","catch","error","closeData","postdata","postdefault","dialogedit","savePostdata","post","orders","alert","created"],"sources":["src/views/Product.vue"],"sourcesContent":["<template>\n<v-row justify=\"center\" class=\"space px-16\">\n    <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" v-for=\"(product, i) in products\" :key=\"i\">\n        <v-card class=\"mx-auto rounded-xl\" max-width=\"300\" color=\"\" flat outlined>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.img\"></v-img>\n            </div>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.menu\"></v-img>\n            </div>\n            <v-card-title>{{ product.products_name }}</v-card-title>\n            <v-card-title class=\"grey--text text-grey-darken-1 caption mt-n6\">{{ product.subtitle }}</v-card-title>\n            <v-card-title class=\"mt-n4\">{{ product.price }}</v-card-title>\n            <v-card-actions class=\"mx-2 mt-n4\">\n                <v-btn outlined class=\"mt-n2 add\" @click=\"decrement\">\n                    <v-icon color=\"green\">fa fa-minus</v-icon>\n                </v-btn>\n                <strong class=\"mx-2\" v-text=\"bpm\"></strong>\n                <v-btn outlined class=\"mt-n2 add\" @click=\"increment\">\n                    <v-icon color=\"green\">fa fa-plus</v-icon>\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\">\n                    <v-icon dark>fa fa-shopping-basket</v-icon>\n                </v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-col>\n</v-row>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data: () => ({\n        bpm: 1,\n        id: '',\n        products: [] // Initialize products as an empty array\n    }),\n    methods: {\n        decrement() {\n            if (this.bpm > 1) {\n                this.bpm--;\n            }\n        },\n        increment() {\n            this.bpm++;\n        },\n        fetchProducts() {\n            axios.get('http://localhost:3000/products')\n                .then(response => {\n                    this.products = response.data.data; // Assuming the data is in response.data.data\n                    console.log(response.data.data);\n                })\n                .catch(error => {\n                    console.error('Error fetching products:', error);\n                });\n        },\n        closeData() {\n            this.id = ''\n            this.postdata = {\n                ...this.postdefault\n            }\n            this.dialogedit = false\n        },\n        async savePostdata() {\n            try {\n                const {\n                    data\n                } = await this.axios.post('http://localhost:3000/products/', + this.id + this.orders, this.postdata)\n                console.log(data)\n                alert('creat complete')\n                this.fetchProducts()\n                this.closeData()\n            } catch (error) {\n                console.log(error);\n                alert('error')\n            }\n        },\n    },\n    created() {\n        this.fetchProducts(); // Fetch products when the component is created\n    }\n};\n</script>\n\n<style>\n/* Add any necessary styles */\n</style>\n"],"mappings":"AAgCA,OAAAA,KAAA;AAEA;EACAC,IAAA,EAAAA,CAAA;IACAC,GAAA;IACAC,EAAA;IACAC,QAAA;EACA;EACAC,OAAA;IACAC,UAAA;MACA,SAAAJ,GAAA;QACA,KAAAA,GAAA;MACA;IACA;IACAK,UAAA;MACA,KAAAL,GAAA;IACA;IACAM,cAAA;MACAR,KAAA,CAAAS,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA,KAAAP,QAAA,GAAAO,QAAA,CAAAV,IAAA,CAAAA,IAAA;QACAW,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAV,IAAA,CAAAA,IAAA;MACA,GACAa,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,6BAAAA,KAAA;MACA;IACA;IACAC,UAAA;MACA,KAAAb,EAAA;MACA,KAAAc,QAAA;QACA,QAAAC;MACA;MACA,KAAAC,UAAA;IACA;IACA,MAAAC,aAAA;MACA;QACA;UACAnB;QACA,eAAAD,KAAA,CAAAqB,IAAA,0CAAAlB,EAAA,QAAAmB,MAAA,OAAAL,QAAA;QACAL,OAAA,CAAAC,GAAA,CAAAZ,IAAA;QACAsB,KAAA;QACA,KAAAf,aAAA;QACA,KAAAQ,SAAA;MACA,SAAAD,KAAA;QACAH,OAAA,CAAAC,GAAA,CAAAE,KAAA;QACAQ,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAhB,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}