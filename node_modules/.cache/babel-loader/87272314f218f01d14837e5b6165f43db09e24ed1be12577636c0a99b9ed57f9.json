{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data: () => ({\n    bpm: 1,\n    id: '',\n    orders: [],\n    products: [],\n    postdata: {\n      products_name: '',\n      price: '',\n      amout: ''\n    },\n    postdefault: {\n      products_name: '',\n      price: '',\n      amout: ''\n    }\n  }),\n  methods: {\n    decrement() {\n      if (this.bpm > 1) {\n        this.bpm--;\n      }\n    },\n    increment() {\n      this.bpm++;\n    },\n    fetchProducts() {\n      axios.get('http://localhost:3000/products').then(response => {\n        this.products = response.data.data; // Assuming the data is in response.data.data\n        console.log(response.data.data);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    },\n    newItem() {\n      this.id = '';\n      this.postdata = {\n        ...this.postdefault\n      };\n    },\n    addOrder() {\n      this.orders.push({\n        id: this.id,\n        ...this.postdata,\n        amount: this.bpm\n      });\n      this.newItem(); // Reset the form after adding order\n    },\n    async savePostdata() {\n      try {\n        const response = await axios.post('http://localhost:3000/orders', {\n          orders: this.orders\n        });\n        console.log(response.data);\n        alert('Order created successfully');\n        this.fetchProducts();\n      } catch (error) {\n        console.error(error);\n        alert('Error creating order');\n      }\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  }\n};","map":{"version":3,"names":["axios","data","bpm","id","orders","products","postdata","products_name","price","amout","postdefault","methods","decrement","increment","fetchProducts","get","then","response","console","log","catch","error","newItem","addOrder","push","amount","savePostdata","post","alert","created"],"sources":["src/views/Product.vue"],"sourcesContent":["<template>\n<v-row justify=\"center\" class=\"space px-16\">\n    <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" v-for=\"(product, i) in products\" :key=\"i\">\n        <v-card class=\"mx-auto rounded-xl\" max-width=\"300\" color=\"\" flat outlined>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.img\"></v-img>\n            </div>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.menu\"></v-img>\n            </div>\n            <v-card-title>{{ product.products_name }}</v-card-title>\n            <v-card-title class=\"grey--text text-grey-darken-1 caption mt-n6\">{{ product.subtitle }}</v-card-title>\n            <v-card-title class=\"mt-n4\">{{ product.price }}</v-card-title>\n            <v-card-actions class=\"mx-2 mt-n4\">\n                <div>\n                    <v-btn outlined class=\"mt-n2 add\" @click=\"increment\">\n                        <v-icon color=\"green\">fa fa-plus</v-icon>\n                    </v-btn>\n\n                    <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\" @click=\"decrement\">\n                        <v-icon dark>fa fa-minus</v-icon>\n                    </v-btn>\n\n                    <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\" @click=\"newItem\">\n                        <v-icon dark>fa fa-shopping-basket</v-icon>\n                    </v-btn>\n\n                    <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\" @click=\"addOrder\">\n                        <v-icon dark>fa fa-check\"></v-icon>\n                    </v-btn>\n\n                    <div>\n                        <ul>\n                            <li v-for=\"product in products\" :key=\"product.id\">\n                                {{ product.products_name }} - {{ product.price }} - {{ product.amout }}\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </v-card-actions>\n        </v-card>\n    </v-col>\n</v-row>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data: () => ({\n        bpm: 1,\n        id: '',\n        orders: [],\n        products: [],\n        postdata: {\n            products_name: '',\n            price: '',\n            amout: '',\n        },\n        postdefault: {\n            products_name: '',\n            price: '',\n            amout: '',\n        },\n    }),\n    methods: {\n        decrement() {\n            if (this.bpm > 1) {\n                this.bpm--;\n            }\n        },\n        increment() {\n            this.bpm++;\n        },\n        fetchProducts() {\n            axios.get('http://localhost:3000/products')\n                .then(response => {\n                    this.products = response.data.data; // Assuming the data is in response.data.data\n                    console.log(response.data.data);\n                })\n                .catch(error => {\n                    console.error('Error fetching products:', error);\n                });\n        },\n        newItem() {\n            this.id = '';\n            this.postdata = { ...this.postdefault };\n        },\n        addOrder() {\n            this.orders.push({\n                id: this.id,\n                ...this.postdata,\n                amount: this.bpm,\n            });\n            this.newItem(); // Reset the form after adding order\n        },\n        async savePostdata() {\n            try {\n                const response = await axios.post('http://localhost:3000/orders', { orders: this.orders });\n                console.log(response.data);\n                alert('Order created successfully');\n                this.fetchProducts();\n            } catch (error) {\n                console.error(error);\n                alert('Error creating order');\n            }\n        },\n    },\n    created() {\n        this.fetchProducts(); // Fetch products when the component is created\n    }\n};\n</script>\n\n<style>\n/* Add any necessary styles */\n</style>\n"],"mappings":";AA8CA,OAAAA,KAAA;AAEA;EACAC,IAAA,EAAAA,CAAA;IACAC,GAAA;IACAC,EAAA;IACAC,MAAA;IACAC,QAAA;IACAC,QAAA;MACAC,aAAA;MACAC,KAAA;MACAC,KAAA;IACA;IACAC,WAAA;MACAH,aAAA;MACAC,KAAA;MACAC,KAAA;IACA;EACA;EACAE,OAAA;IACAC,UAAA;MACA,SAAAV,GAAA;QACA,KAAAA,GAAA;MACA;IACA;IACAW,UAAA;MACA,KAAAX,GAAA;IACA;IACAY,cAAA;MACAd,KAAA,CAAAe,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA,KAAAZ,QAAA,GAAAY,QAAA,CAAAhB,IAAA,CAAAA,IAAA;QACAiB,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAhB,IAAA,CAAAA,IAAA;MACA,GACAmB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,6BAAAA,KAAA;MACA;IACA;IACAC,QAAA;MACA,KAAAnB,EAAA;MACA,KAAAG,QAAA;QAAA,QAAAI;MAAA;IACA;IACAa,SAAA;MACA,KAAAnB,MAAA,CAAAoB,IAAA;QACArB,EAAA,OAAAA,EAAA;QACA,QAAAG,QAAA;QACAmB,MAAA,OAAAvB;MACA;MACA,KAAAoB,OAAA;IACA;IACA,MAAAI,aAAA;MACA;QACA,MAAAT,QAAA,SAAAjB,KAAA,CAAA2B,IAAA;UAAAvB,MAAA,OAAAA;QAAA;QACAc,OAAA,CAAAC,GAAA,CAAAF,QAAA,CAAAhB,IAAA;QACA2B,KAAA;QACA,KAAAd,aAAA;MACA,SAAAO,KAAA;QACAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;QACAO,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAf,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}