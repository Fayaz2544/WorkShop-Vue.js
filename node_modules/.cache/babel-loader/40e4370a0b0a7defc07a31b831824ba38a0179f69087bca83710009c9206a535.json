{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      id: '',\n      products: [],\n      orders: [],\n      selectedProductId: ''\n    };\n  },\n  methods: {\n    decrement(index) {\n      if (this.products[index].bpm > 0) {\n        this.products[index].bpm--;\n      }\n    },\n    increment(index) {\n      this.products[index].bpm++;\n    },\n    fetchProducts() {\n      axios.get('http://localhost:3000/products').then(response => {\n        this.products = response.data.data.map(product => ({\n          ...product,\n          bpm: 0\n        }));\n        console.log(this.products);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    },\n    addToOrder(index) {\n      const product = this.products[index];\n      if (product.bpm > 0) {\n        const orderItem = {\n          productId: product._id,\n          products_name: product.products_name,\n          price: product.price,\n          amount: product.bpm\n        };\n        this.orders.push(orderItem);\n        this.products[index].bpm = 0; // Reset bpm after adding to order\n        console.log(this.orders);\n      } else {\n        alert('Please select at least one item to add to order.');\n      }\n    },\n    // อัปเดตค่าของ selectedProductId เมื่อผู้ใช้เลือกสินค้า\n    setSelectedProductId(productId) {\n      this.selectedProductId = productId;\n    },\n    async saveOrder(productId) {\n      try {\n        // Assuming you have the token stored in some variable accessible in this component\n        const token = 'your_auth_token_here'; // Replace this with your actual token\n\n        const url = `http://localhost:3000/products/${productId}/orders`;\n        const response = await axios.post(url, {\n          orders: this.orders\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(response.data);\n        alert('Order created successfully');\n        this.orders = []; // Reset orders after saving\n      } catch (error) {\n        console.error(error);\n        alert('Error creating order');\n      }\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  }\n};","map":{"version":3,"names":["axios","data","id","products","orders","selectedProductId","methods","decrement","index","bpm","increment","fetchProducts","get","then","response","map","product","console","log","catch","error","addToOrder","orderItem","productId","_id","products_name","price","amount","push","alert","setSelectedProductId","saveOrder","token","url","post","headers","Authorization","created"],"sources":["src/views/Product.vue"],"sourcesContent":["<template>\n<v-row justify=\"center\" class=\"space px-16\">\n    <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" v-for=\"(product, i) in products\" :key=\"i\">\n        <v-card class=\"mx-auto rounded-xl\" max-width=\"300\" color=\"\" flat outlined>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.img\"></v-img>\n            </div>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.menu\"></v-img>\n            </div>\n            <v-card-title>{{ product.products_name }}</v-card-title>\n            <v-card-title class=\"grey--text text-grey-darken-1 caption mt-n6\">{{ product.subtitle }}</v-card-title>\n            <v-card-title class=\"mt-n4\">{{ product.price }}</v-card-title>\n            <v-card-actions class=\"mx-2 mt-n4\">\n                <v-btn outlined class=\"mt-n2 add\" @click=\"decrement(i)\">\n                    <v-icon color=\"green\">fa fa-minus</v-icon>\n                </v-btn>\n                <strong class=\"mx-2\" v-text=\"product.bpm\"></strong>\n                <v-btn outlined class=\"mt-n2 add\" @click=\"increment(i)\">\n                    <v-icon color=\"green\">fa fa-plus</v-icon>\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\" @click=\"addToOrder(i)\">\n                    <v-icon dark>fa fa-shopping-basket</v-icon>\n                </v-btn>\n            </v-card-actions>\n        </v-card>\n        <v-btn class=\"mt-3\" color=\"primary\" @click=\"saveOrder(product._id)\">Save Order</v-btn>\n    </v-col>\n</v-row>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            id: '',\n            products: [],\n            orders: [],\n            selectedProductId: '',\n\n        };\n    },\n    methods: {\n        decrement(index) {\n            if (this.products[index].bpm > 0) {\n                this.products[index].bpm--;\n            }\n        },\n        increment(index) {\n            this.products[index].bpm++;\n        },\n        fetchProducts() {\n            axios.get('http://localhost:3000/products')\n                .then(response => {\n                    this.products = response.data.data.map(product => ({\n                        ...product,\n                        bpm: 0\n                    }));\n                    console.log(this.products);\n                })\n                .catch(error => {\n                    console.error('Error fetching products:', error);\n                });\n        },\n        addToOrder(index) {\n            const product = this.products[index];\n            if (product.bpm > 0) {\n                const orderItem = {\n                    productId: product._id,\n                    products_name: product.products_name,\n                    price: product.price,\n                    amount: product.bpm\n                };\n                this.orders.push(orderItem);\n                this.products[index].bpm = 0; // Reset bpm after adding to order\n                console.log(this.orders);\n            } else {\n                alert('Please select at least one item to add to order.');\n            }\n        },\n        // อัปเดตค่าของ selectedProductId เมื่อผู้ใช้เลือกสินค้า\n        setSelectedProductId(productId) {\n            this.selectedProductId = productId;\n        },\n        async saveOrder(productId) {\n    try {\n        // Assuming you have the token stored in some variable accessible in this component\n        const token = 'your_auth_token_here'; // Replace this with your actual token\n\n        const url = `http://localhost:3000/products/${productId}/orders`;\n        const response = await axios.post(url, {\n            orders: this.orders\n        }, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        });\n        console.log(response.data);\n        alert('Order created successfully');\n        this.orders = []; // Reset orders after saving\n    } catch (error) {\n        console.error(error);\n        alert('Error creating order');\n    }\n},\n\n    },\n    created() {\n        this.fetchProducts(); // Fetch products when the component is created\n    }\n};\n</script>\n"],"mappings":";AAiCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,EAAA;MACAC,QAAA;MACAC,MAAA;MACAC,iBAAA;IAEA;EACA;EACAC,OAAA;IACAC,UAAAC,KAAA;MACA,SAAAL,QAAA,CAAAK,KAAA,EAAAC,GAAA;QACA,KAAAN,QAAA,CAAAK,KAAA,EAAAC,GAAA;MACA;IACA;IACAC,UAAAF,KAAA;MACA,KAAAL,QAAA,CAAAK,KAAA,EAAAC,GAAA;IACA;IACAE,cAAA;MACAX,KAAA,CAAAY,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA,KAAAX,QAAA,GAAAW,QAAA,CAAAb,IAAA,CAAAA,IAAA,CAAAc,GAAA,CAAAC,OAAA;UACA,GAAAA,OAAA;UACAP,GAAA;QACA;QACAQ,OAAA,CAAAC,GAAA,MAAAf,QAAA;MACA,GACAgB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,6BAAAA,KAAA;MACA;IACA;IACAC,WAAAb,KAAA;MACA,MAAAQ,OAAA,QAAAb,QAAA,CAAAK,KAAA;MACA,IAAAQ,OAAA,CAAAP,GAAA;QACA,MAAAa,SAAA;UACAC,SAAA,EAAAP,OAAA,CAAAQ,GAAA;UACAC,aAAA,EAAAT,OAAA,CAAAS,aAAA;UACAC,KAAA,EAAAV,OAAA,CAAAU,KAAA;UACAC,MAAA,EAAAX,OAAA,CAAAP;QACA;QACA,KAAAL,MAAA,CAAAwB,IAAA,CAAAN,SAAA;QACA,KAAAnB,QAAA,CAAAK,KAAA,EAAAC,GAAA;QACAQ,OAAA,CAAAC,GAAA,MAAAd,MAAA;MACA;QACAyB,KAAA;MACA;IACA;IACA;IACAC,qBAAAP,SAAA;MACA,KAAAlB,iBAAA,GAAAkB,SAAA;IACA;IACA,MAAAQ,UAAAR,SAAA;MACA;QACA;QACA,MAAAS,KAAA;;QAEA,MAAAC,GAAA,qCAAAV,SAAA;QACA,MAAAT,QAAA,SAAAd,KAAA,CAAAkC,IAAA,CAAAD,GAAA;UACA7B,MAAA,OAAAA;QACA;UACA+B,OAAA;YACAC,aAAA,YAAAJ,KAAA;UACA;QACA;QACAf,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAb,IAAA;QACA4B,KAAA;QACA,KAAAzB,MAAA;MACA,SAAAgB,KAAA;QACAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;QACAS,KAAA;MACA;IACA;EAEA;EACAQ,QAAA;IACA,KAAA1B,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}