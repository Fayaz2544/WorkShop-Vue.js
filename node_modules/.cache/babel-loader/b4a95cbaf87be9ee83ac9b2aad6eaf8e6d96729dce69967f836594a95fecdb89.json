{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      id: '',\n      products: [],\n      orders: [],\n      selectedProductId: ''\n    };\n  },\n  methods: {\n    decrement(index) {\n      if (this.products[index].bpm > 0) {\n        this.products[index].bpm--;\n      }\n    },\n    increment(index) {\n      const product = this.products[index];\n      if (product.bpm < product.amount) {\n        product.bpm++;\n      } else {\n        alert('Cannot add more than available amount');\n      }\n    },\n    fetchProducts() {\n      axios.get('http://localhost:3000/products').then(response => {\n        this.products = response.data.data.map(product => ({\n          ...product,\n          bpm: 0\n        }));\n        console.log(this.products);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    },\n    addToOrder(index) {\n      const product = this.products[index];\n      if (product.bpm > 0) {\n        for (let i = 0; i < product.bpm; i++) {\n          const orderItem = {\n            productId: product._id,\n            products_name: product.products_name,\n            price: product.price,\n            amount: product.amount,\n            orderamount: 1 // กำหนด orderamount เป็น 1 เนื่องจากเพิ่ม order ต่อ 1 bpm\n          };\n          this.orders.push(orderItem);\n        }\n        this.products[index].bpm = 0; // รีเซ็ตค่า bpm เป็น 0 หลังจากที่เพิ่มในออร์เดอร์แล้ว\n        console.log(this.orders);\n        console.log('เพิ่มสินค้าลงในตะกร้า:', product);\n\n        // เรียกเมทอด saveOrder พร้อมส่ง productId ไป\n        this.saveOrder(product._id, this.orders);\n      } else {\n        alert('โปรดเลือกอย่างน้อยหนึ่งรายการเพื่อเพิ่มในการสั่งซื้อ.');\n        Swal.fire({\n          title: \"เพิ่มคำสั่งซื้อเรียบร้อยแล้ว\",\n          icon: \"success\",\n          showConfirmButton: false,\n          timer: 1000\n        });\n      }\n    },\n    // อัปเดตค่าของ selectedProductId เมื่อผู้ใช้เลือกสินค้า\n    setSelectedProductId(productId) {\n      this.selectedProductId = productId;\n    },\n    async saveOrder(productId, orderItem) {\n      try {\n        const url = `http://localhost:3000/products/${productId}/orders`;\n        const response = await axios.post(url, orderItem); // ส่ง orderItem ที่มีค่า bpm ไป\n        console.log(response.data);\n        Swal.fire({\n          title: \"เพิ่มคำสั่งซื้อเรียบร้อยแล้ว\",\n          icon: \"success\",\n          showConfirmButton: false,\n          timer: 1000\n        });\n        this.orders = [];\n      } catch (error) {\n        console.error('Error creating order:', error.response ? error.response.data : error.message);\n        alert('error');\n      }\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  }\n};","map":{"version":3,"names":["axios","Swal","data","id","products","orders","selectedProductId","methods","decrement","index","bpm","increment","product","amount","alert","fetchProducts","get","then","response","map","console","log","catch","error","addToOrder","i","orderItem","productId","_id","products_name","price","orderamount","push","saveOrder","fire","title","icon","showConfirmButton","timer","setSelectedProductId","url","post","message","created"],"sources":["src/components/Product.vue"],"sourcesContent":["<template>\n<v-row justify=\"center\" class=\"space px-16\">\n    <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" v-for=\"(product, i) in products\" :key=\"i\">\n        <v-card class=\"mx-auto rounded-xl\" max-width=\"300\" style=\"padding-top: 30px;\" flat outlined>\n            <div align=\"center\" justify=\"center\">\n                <v-img v-if=\"product.picmenu\" :src=\"product.picmenu\" max-height=\"200px\" max-width=\"200px\" style contain></v-img>\n                <div v-else style=\"height: 300px; width: 300px; display: flex; align-items: center; justify-content: center; background-color: lightgray;\">\n                    <span>Image not available</span>\n                </div>\n            </div>\n            <v-card-title style=\"justify-content:center\">เมนู : {{ product.products_name }}</v-card-title>\n            <v-card-title class=\"mt-n4\" style=\"justify-content: center;\">ราคา : {{ product.price }} บาท</v-card-title>\n            <br>\n            <v-card-actions class=\"mx-2 mt-n4\">\n                <v-btn outlined class=\"mt-n2 add\" @click=\"decrement(i)\">\n                    <v-icon color=\"green\">fa fa-minus</v-icon>\n                </v-btn>\n                <strong class=\"mx-2\" v-text=\"product.bpm\"></strong>\n                <v-btn outlined class=\"mt-n2 add\" @click=\"increment(i)\">\n                    <v-icon color=\"green\">fa fa-plus</v-icon>\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\" @click=\"addToOrder(i)\">\n                    <v-icon dark>fa fa-shopping-basket</v-icon>\n                </v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-col>\n</v-row>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nexport default {\n    data() {\n        return {\n            id: '',\n            products: [],\n            orders: [],\n            selectedProductId: '',\n        };\n    },\n    methods: {\n        decrement(index) {\n            if (this.products[index].bpm > 0) {\n                this.products[index].bpm--;\n            }\n        },\n        increment(index) {\n            const product = this.products[index];\n            if (product.bpm < product.amount) {\n                product.bpm++;\n            } else {\n                alert('Cannot add more than available amount');\n            }\n        },\n        fetchProducts() {\n            axios.get('http://localhost:3000/products')\n                .then(response => {\n                    this.products = response.data.data.map(product => ({\n                        ...product,\n                        bpm: 0,\n                    }));\n                    console.log(this.products);\n                })\n                .catch(error => {\n                    console.error('Error fetching products:', error);\n                });\n        },\n        addToOrder(index) {\n            const product = this.products[index];\n            if (product.bpm > 0) {\n                for (let i = 0; i < product.bpm; i++) {\n                    const orderItem = {\n                        productId: product._id,\n                        products_name: product.products_name,\n                        price: product.price,\n                        amount: product.amount,\n                        orderamount: 1 // กำหนด orderamount เป็น 1 เนื่องจากเพิ่ม order ต่อ 1 bpm\n                    };\n                    this.orders.push(orderItem);\n                }\n                this.products[index].bpm = 0; // รีเซ็ตค่า bpm เป็น 0 หลังจากที่เพิ่มในออร์เดอร์แล้ว\n                console.log(this.orders);\n                console.log('เพิ่มสินค้าลงในตะกร้า:', product);\n\n                // เรียกเมทอด saveOrder พร้อมส่ง productId ไป\n                this.saveOrder(product._id, this.orders);\n            } else {\n                alert('โปรดเลือกอย่างน้อยหนึ่งรายการเพื่อเพิ่มในการสั่งซื้อ.');\n                Swal.fire({\n                    title: \"เพิ่มคำสั่งซื้อเรียบร้อยแล้ว\",\n                    icon: \"success\",\n                    showConfirmButton: false,\n                    timer: 1000\n                });\n            }\n        },\n        // อัปเดตค่าของ selectedProductId เมื่อผู้ใช้เลือกสินค้า\n        setSelectedProductId(productId) {\n            this.selectedProductId = productId;\n        },\n        async saveOrder(productId, orderItem) {\n            try {\n                const url = `http://localhost:3000/products/${productId}/orders`;\n                const response = await axios.post(url, orderItem); // ส่ง orderItem ที่มีค่า bpm ไป\n                console.log(response.data);\n                                Swal.fire({\n                    title: \"เพิ่มคำสั่งซื้อเรียบร้อยแล้ว\",\n                    icon: \"success\",\n                    showConfirmButton: false,\n                    timer: 1000\n                });\n                this.orders = [];\n            } catch (error) {\n                console.error('Error creating order:', error.response ? error.response.data : error.message);\n                alert('error');\n            }\n        }\n    },\n    created() {\n        this.fetchProducts(); // Fetch products when the component is created\n    }\n};\n</script>\n"],"mappings":";AAgCA,OAAAA,KAAA;AACA,OAAAC,IAAA;AAEA;EACAC,KAAA;IACA;MACAC,EAAA;MACAC,QAAA;MACAC,MAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAAC,KAAA;MACA,SAAAL,QAAA,CAAAK,KAAA,EAAAC,GAAA;QACA,KAAAN,QAAA,CAAAK,KAAA,EAAAC,GAAA;MACA;IACA;IACAC,UAAAF,KAAA;MACA,MAAAG,OAAA,QAAAR,QAAA,CAAAK,KAAA;MACA,IAAAG,OAAA,CAAAF,GAAA,GAAAE,OAAA,CAAAC,MAAA;QACAD,OAAA,CAAAF,GAAA;MACA;QACAI,KAAA;MACA;IACA;IACAC,cAAA;MACAf,KAAA,CAAAgB,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA,KAAAd,QAAA,GAAAc,QAAA,CAAAhB,IAAA,CAAAA,IAAA,CAAAiB,GAAA,CAAAP,OAAA;UACA,GAAAA,OAAA;UACAF,GAAA;QACA;QACAU,OAAA,CAAAC,GAAA,MAAAjB,QAAA;MACA,GACAkB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,6BAAAA,KAAA;MACA;IACA;IACAC,WAAAf,KAAA;MACA,MAAAG,OAAA,QAAAR,QAAA,CAAAK,KAAA;MACA,IAAAG,OAAA,CAAAF,GAAA;QACA,SAAAe,CAAA,MAAAA,CAAA,GAAAb,OAAA,CAAAF,GAAA,EAAAe,CAAA;UACA,MAAAC,SAAA;YACAC,SAAA,EAAAf,OAAA,CAAAgB,GAAA;YACAC,aAAA,EAAAjB,OAAA,CAAAiB,aAAA;YACAC,KAAA,EAAAlB,OAAA,CAAAkB,KAAA;YACAjB,MAAA,EAAAD,OAAA,CAAAC,MAAA;YACAkB,WAAA;UACA;UACA,KAAA1B,MAAA,CAAA2B,IAAA,CAAAN,SAAA;QACA;QACA,KAAAtB,QAAA,CAAAK,KAAA,EAAAC,GAAA;QACAU,OAAA,CAAAC,GAAA,MAAAhB,MAAA;QACAe,OAAA,CAAAC,GAAA,2BAAAT,OAAA;;QAEA;QACA,KAAAqB,SAAA,CAAArB,OAAA,CAAAgB,GAAA,OAAAvB,MAAA;MACA;QACAS,KAAA;QACAb,IAAA,CAAAiC,IAAA;UACAC,KAAA;UACAC,IAAA;UACAC,iBAAA;UACAC,KAAA;QACA;MACA;IACA;IACA;IACAC,qBAAAZ,SAAA;MACA,KAAArB,iBAAA,GAAAqB,SAAA;IACA;IACA,MAAAM,UAAAN,SAAA,EAAAD,SAAA;MACA;QACA,MAAAc,GAAA,qCAAAb,SAAA;QACA,MAAAT,QAAA,SAAAlB,KAAA,CAAAyC,IAAA,CAAAD,GAAA,EAAAd,SAAA;QACAN,OAAA,CAAAC,GAAA,CAAAH,QAAA,CAAAhB,IAAA;QACAD,IAAA,CAAAiC,IAAA;UACAC,KAAA;UACAC,IAAA;UACAC,iBAAA;UACAC,KAAA;QACA;QACA,KAAAjC,MAAA;MACA,SAAAkB,KAAA;QACAH,OAAA,CAAAG,KAAA,0BAAAA,KAAA,CAAAL,QAAA,GAAAK,KAAA,CAAAL,QAAA,CAAAhB,IAAA,GAAAqB,KAAA,CAAAmB,OAAA;QACA5B,KAAA;MACA;IACA;EACA;EACA6B,QAAA;IACA,KAAA5B,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}