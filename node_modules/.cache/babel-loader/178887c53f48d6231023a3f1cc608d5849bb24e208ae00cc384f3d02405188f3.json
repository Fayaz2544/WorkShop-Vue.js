{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      id: '',\n      products: [],\n      orders: [],\n      selectedProductId: ''\n    };\n  },\n  methods: {\n    decrement(product) {\n      if (this.products[product].bpm > 0) {\n        this.products[product].bpm--;\n      }\n    },\n    increment(product) {\n      this.products[product].bpm++;\n    },\n    fetchProducts() {\n      axios.get('http://localhost:3000/products').then(response => {\n        this.products = response.data.data.map(product => ({\n          ...product,\n          bpm: 0\n        }));\n        console.log(this.products);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    },\n    addToOrder(product) {\n      const products = this.products[product];\n      if (product.bpm > 0) {\n        const orderItem = {\n          productId: products._id,\n          products_name: products.products_name,\n          price: product.price,\n          amount: products.amount,\n          orderamount: products.bpm\n        };\n        this.orders.push(orderItem);\n        this.products[product].bpm = 0; // Reset bpm after adding to order\n        console.log(this.orders);\n        console.log('เพิ่มสินค้าลงในตะกร้า:', product);\n\n        // Call saveOrder with the productId\n        this.saveOrder(product._id);\n      } else {\n        alert('Please select at least one item to add to order.');\n      }\n    },\n    // อัปเดตค่าของ selectedProductId เมื่อผู้ใช้เลือกสินค้า\n    setSelectedProductId(productId) {\n      this.selectedProductId = productId;\n    },\n    async saveOrder(productId) {\n      try {\n        const url = `http://localhost:3000/products/${productId}/orders`;\n        const response = await axios.post(url, {\n          orders: this.orders\n        });\n        console.log(response.data);\n        alert('Order created successfully');\n        this.orders = []; // Reset orders after saving\n      } catch (error) {\n        console.error(error);\n        alert('Error creating order');\n      }\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  }\n};","map":{"version":3,"names":["axios","data","id","products","orders","selectedProductId","methods","decrement","product","bpm","increment","fetchProducts","get","then","response","map","console","log","catch","error","addToOrder","orderItem","productId","_id","products_name","price","amount","orderamount","push","saveOrder","alert","setSelectedProductId","url","post","created"],"sources":["src/views/Product.vue"],"sourcesContent":["<template>\n<v-row justify=\"center\" class=\"space px-16\">\n    <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" v-for=\"(product, i) in products\" :key=\"i\">\n        <v-card class=\"mx-auto rounded-xl\" max-width=\"300\" color=\"\" flat outlined>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.img\"></v-img>\n            </div>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.menu\"></v-img>\n            </div>\n            <v-card-title>{{ product.products_name }}</v-card-title>\n            <v-card-title class=\"grey--text text-grey-darken-1 caption mt-n6\">{{ product.subtitle }}</v-card-title>\n            <v-card-title class=\"mt-n4\">{{ product.price }}</v-card-title>\n            <v-card-actions class=\"mx-2 mt-n4\">\n                <v-btn outlined class=\"mt-n2 add\" @click=\"decrement(i)\">\n                    <v-icon color=\"green\">fa fa-minus</v-icon>\n                </v-btn>\n                <strong class=\"mx-2\" v-text=\"product.bpm\"></strong>\n                <v-btn outlined class=\"mt-n2 add\" @click=\"increment(i)\">\n                    <v-icon color=\"green\">fa fa-plus</v-icon>\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\" @click=\"addToOrder(i)\">\n                    <v-icon dark>fa fa-shopping-basket</v-icon>\n                </v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-col>\n</v-row>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            id: '',\n            products: [],\n            orders: [],\n            selectedProductId: '',\n\n        };\n    },\n    methods: {\n        decrement(product) {\n            if (this.products[product].bpm > 0) {\n                this.products[product].bpm--;\n            }\n        },\n        increment(product) {\n            this.products[product].bpm++;\n        },\n        fetchProducts() {\n            axios.get('http://localhost:3000/products')\n                .then(response => {\n                    this.products = response.data.data.map(product => ({\n                        ...product,\n                        bpm: 0,\n                    }));\n                    console.log(this.products);\n                })\n                .catch(error => {\n                    console.error('Error fetching products:', error);\n                });\n        },\n        addToOrder(product) {\n            const products = this.products[product];\n            if (product.bpm > 0) {\n                const orderItem = {\n                    productId: products._id,\n                    products_name: products.products_name,\n                    price: product.price,\n                    amount: products.amount,\n                    orderamount: products.bpm\n                };\n                this.orders.push(orderItem);\n                this.products[product].bpm = 0; // Reset bpm after adding to order\n                console.log(this.orders);\n                console.log('เพิ่มสินค้าลงในตะกร้า:', product);\n\n                // Call saveOrder with the productId\n                this.saveOrder(product._id);\n            } else {\n                alert('Please select at least one item to add to order.');\n            }\n        },\n        // อัปเดตค่าของ selectedProductId เมื่อผู้ใช้เลือกสินค้า\n        setSelectedProductId(productId) {\n            this.selectedProductId = productId;\n        },\n        async saveOrder(productId) {\n            try {\n                const url = `http://localhost:3000/products/${productId}/orders`;\n                const response = await axios.post(url, {\n                    orders: this.orders\n                });\n                console.log(response.data);\n                alert('Order created successfully');\n                this.orders = []; // Reset orders after saving\n            } catch (error) {\n                console.error(error);\n                alert('Error creating order');\n            }\n        },\n    },\n    created() {\n        this.fetchProducts(); // Fetch products when the component is created\n    }\n};\n</script>\n"],"mappings":";AAgCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,EAAA;MACAC,QAAA;MACAC,MAAA;MACAC,iBAAA;IAEA;EACA;EACAC,OAAA;IACAC,UAAAC,OAAA;MACA,SAAAL,QAAA,CAAAK,OAAA,EAAAC,GAAA;QACA,KAAAN,QAAA,CAAAK,OAAA,EAAAC,GAAA;MACA;IACA;IACAC,UAAAF,OAAA;MACA,KAAAL,QAAA,CAAAK,OAAA,EAAAC,GAAA;IACA;IACAE,cAAA;MACAX,KAAA,CAAAY,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA,KAAAX,QAAA,GAAAW,QAAA,CAAAb,IAAA,CAAAA,IAAA,CAAAc,GAAA,CAAAP,OAAA;UACA,GAAAA,OAAA;UACAC,GAAA;QACA;QACAO,OAAA,CAAAC,GAAA,MAAAd,QAAA;MACA,GACAe,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,6BAAAA,KAAA;MACA;IACA;IACAC,WAAAZ,OAAA;MACA,MAAAL,QAAA,QAAAA,QAAA,CAAAK,OAAA;MACA,IAAAA,OAAA,CAAAC,GAAA;QACA,MAAAY,SAAA;UACAC,SAAA,EAAAnB,QAAA,CAAAoB,GAAA;UACAC,aAAA,EAAArB,QAAA,CAAAqB,aAAA;UACAC,KAAA,EAAAjB,OAAA,CAAAiB,KAAA;UACAC,MAAA,EAAAvB,QAAA,CAAAuB,MAAA;UACAC,WAAA,EAAAxB,QAAA,CAAAM;QACA;QACA,KAAAL,MAAA,CAAAwB,IAAA,CAAAP,SAAA;QACA,KAAAlB,QAAA,CAAAK,OAAA,EAAAC,GAAA;QACAO,OAAA,CAAAC,GAAA,MAAAb,MAAA;QACAY,OAAA,CAAAC,GAAA,2BAAAT,OAAA;;QAEA;QACA,KAAAqB,SAAA,CAAArB,OAAA,CAAAe,GAAA;MACA;QACAO,KAAA;MACA;IACA;IACA;IACAC,qBAAAT,SAAA;MACA,KAAAjB,iBAAA,GAAAiB,SAAA;IACA;IACA,MAAAO,UAAAP,SAAA;MACA;QACA,MAAAU,GAAA,qCAAAV,SAAA;QACA,MAAAR,QAAA,SAAAd,KAAA,CAAAiC,IAAA,CAAAD,GAAA;UACA5B,MAAA,OAAAA;QACA;QACAY,OAAA,CAAAC,GAAA,CAAAH,QAAA,CAAAb,IAAA;QACA6B,KAAA;QACA,KAAA1B,MAAA;MACA,SAAAe,KAAA;QACAH,OAAA,CAAAG,KAAA,CAAAA,KAAA;QACAW,KAAA;MACA;IACA;EACA;EACAI,QAAA;IACA,KAAAvB,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}