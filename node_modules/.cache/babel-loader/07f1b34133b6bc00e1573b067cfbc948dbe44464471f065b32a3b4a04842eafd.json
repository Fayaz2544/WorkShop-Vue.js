{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      products: [],\n      orders: []\n    };\n  },\n  methods: {\n    decrement(index) {\n      if (this.products[index].bpm > 0) {\n        this.products[index].bpm--;\n      }\n    },\n    increment(index) {\n      this.products[index].bpm++;\n    },\n    addToOrder(index) {\n      const product = this.products[index];\n      const order = {\n        productName: product.products_name,\n        price: product.price\n      };\n      this.orders.push(order);\n      // ลบค่า bpm ให้กลับเป็น 0 เมื่อสินค้าถูกเพิ่มเข้าใน order\n      this.products[index].bpm = 0;\n    },\n    fetchProducts() {\n      axios.get('http://localhost:3000/products').then(response => {\n        this.products = response.data.data.map(product => ({\n          ...product,\n          bpm: 0\n        }));\n        console.log(this.products);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  }\n};","map":{"version":3,"names":["axios","data","products","orders","methods","decrement","index","bpm","increment","addToOrder","product","order","productName","products_name","price","push","fetchProducts","get","then","response","map","console","log","catch","error","created"],"sources":["src/views/Product.vue"],"sourcesContent":["<template>\n<v-row justify=\"center\" class=\"space px-16\">\n    <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" v-for=\"(product, i) in products\" :key=\"i\">\n        <v-card class=\"mx-auto rounded-xl\" max-width=\"300\" color=\"\" flat outlined>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.img\"></v-img>\n            </div>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.menu\"></v-img>\n            </div>\n            <v-card-title>{{ product.products_name }}</v-card-title>\n            <v-card-title class=\"grey--text text-grey-darken-1 caption mt-n6\">{{ product.subtitle }}</v-card-title>\n            <v-card-title class=\"mt-n4\">{{ product.price }}</v-card-title>\n            <v-card-actions class=\"mx-2 mt-n4\">\n                <v-btn outlined class=\"mt-n2 add\" @click=\"decrement(i)\">\n                    <v-icon color=\"green\">fa fa-minus</v-icon>\n                </v-btn>\n                <strong class=\"mx-2\" v-text=\"product.bpm\"></strong>\n                <v-btn outlined class=\"mt-n2 add\" @click=\"increment(i)\">\n                    <v-icon color=\"green\">fa fa-plus</v-icon>\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\" @click=\"addToOrder(i)\">\n                    <v-icon dark>fa fa-shopping-basket</v-icon>\n                </v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-col>\n</v-row>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            products: [],\n            orders: [],\n        };\n    },\n    methods: {\n        decrement(index) {\n            if (this.products[index].bpm > 0) {\n                this.products[index].bpm--;\n            }\n        },\n        increment(index) {\n            this.products[index].bpm++;\n        },\n        addToOrder(index) {\n            const product = this.products[index];\n            const order = {\n                productName: product.products_name,\n                price: product.price,\n            };\n            this.orders.push(order);\n            // ลบค่า bpm ให้กลับเป็น 0 เมื่อสินค้าถูกเพิ่มเข้าใน order\n            this.products[index].bpm = 0;\n        },\n        fetchProducts() {\n            axios.get('http://localhost:3000/products')\n                .then(response => {\n                    this.products = response.data.data.map(product => ({\n                        ...product,\n                        bpm: 0,\n                    }));\n                    console.log(this.products);\n                })\n                .catch(error => {\n                    console.error('Error fetching products:', error);\n                });\n        },\n    },\n    created() {\n        this.fetchProducts(); // Fetch products when the component is created\n    }\n};\n</script>\n"],"mappings":";AAgCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAAC,KAAA;MACA,SAAAJ,QAAA,CAAAI,KAAA,EAAAC,GAAA;QACA,KAAAL,QAAA,CAAAI,KAAA,EAAAC,GAAA;MACA;IACA;IACAC,UAAAF,KAAA;MACA,KAAAJ,QAAA,CAAAI,KAAA,EAAAC,GAAA;IACA;IACAE,WAAAH,KAAA;MACA,MAAAI,OAAA,QAAAR,QAAA,CAAAI,KAAA;MACA,MAAAK,KAAA;QACAC,WAAA,EAAAF,OAAA,CAAAG,aAAA;QACAC,KAAA,EAAAJ,OAAA,CAAAI;MACA;MACA,KAAAX,MAAA,CAAAY,IAAA,CAAAJ,KAAA;MACA;MACA,KAAAT,QAAA,CAAAI,KAAA,EAAAC,GAAA;IACA;IACAS,cAAA;MACAhB,KAAA,CAAAiB,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA,KAAAjB,QAAA,GAAAiB,QAAA,CAAAlB,IAAA,CAAAA,IAAA,CAAAmB,GAAA,CAAAV,OAAA;UACA,GAAAA,OAAA;UACAH,GAAA;QACA;QACAc,OAAA,CAAAC,GAAA,MAAApB,QAAA;MACA,GACAqB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,6BAAAA,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAT,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}