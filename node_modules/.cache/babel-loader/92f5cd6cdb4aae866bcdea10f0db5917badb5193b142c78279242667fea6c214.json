{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      id: '',\n      products: [],\n      orders: [],\n      selectedProductId: ''\n    };\n  },\n  methods: {\n    decrement(index) {\n      if (this.products[index].bpm > 0) {\n        this.products[index].bpm--;\n      }\n    },\n    increment(index) {\n      const product = this.products[index];\n      if (product.bpm < product.amount) {\n        product.bpm++;\n      } else {\n        Swal.fire({\n          title: \"ไม่สามารถเพิ่มเกินจำนวนที่มีอยู่ได้\",\n          icon: \"info\",\n          showConfirmButton: false,\n          timer: 1000\n        });\n      }\n    },\n    fetchProducts() {\n      axios.get('http://localhost:3000/products').then(response => {\n        this.products = response.data.data.map(product => ({\n          ...product,\n          bpm: 0\n        }));\n        console.log(this.products);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    },\n    addToOrder(index) {\n      const product = this.products[index];\n      if (product.bpm > 0) {\n        for (let i = 0; i < product.bpm; i++) {\n          const orderItem = {\n            productId: product._id,\n            products_name: product.products_name,\n            price: product.price,\n            amount: product.amount,\n            orderamount: product.bpm // กำหนด orderamount เป็น 1 เนื่องจากเพิ่ม order ต่อ 1 bpm\n          };\n          this.orders.push(orderItem);\n        }\n        this.products[index].bpm = 0; // รีเซ็ตค่า bpm เป็น 0 หลังจากที่เพิ่มในออร์เดอร์แล้ว\n        console.log(this.orders);\n        console.log('เพิ่มสินค้าลงในตะกร้า:', product);\n\n        // เรียกเมทอด saveOrder พร้อมส่ง productId ไป\n        this.saveOrder(product._id, this.orders);\n      } else {\n        Swal.fire({\n          title: \"โปรดเลือกอย่างน้อยหนึ่งรายการเพื่อเพิ่มในการสั่งซื้อ\",\n          icon: \"info\",\n          showConfirmButton: false,\n          timer: 1000\n        });\n      }\n    },\n    // อัปเดตค่าของ selectedProductId เมื่อผู้ใช้เลือกสินค้า\n    setSelectedProductId(productId) {\n      this.selectedProductId = productId;\n    },\n    async saveOrder(productId, orderItem) {\n      try {\n        const url = `http://localhost:3000/products/${productId}/orders`;\n        const response = await axios.post(url, orderItem); // ส่ง orderItem ที่มีค่า bpm ไป\n        console.log(response.data);\n        Swal.fire({\n          title: \"เพิ่มคำสั่งซื้อเรียบร้อยแล้ว\",\n          icon: \"success\",\n          showConfirmButton: false,\n          timer: 1000\n        });\n        this.orders = [];\n      } catch (error) {\n        console.error('Error creating order:', error.response ? error.response.data : error.message);\n        alert('error');\n      }\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  }\n};","map":{"version":3,"names":["axios","Swal","data","id","products","orders","selectedProductId","methods","decrement","index","bpm","increment","product","amount","fire","title","icon","showConfirmButton","timer","fetchProducts","get","then","response","map","console","log","catch","error","addToOrder","i","orderItem","productId","_id","products_name","price","orderamount","push","saveOrder","setSelectedProductId","url","post","message","alert","created"],"sources":["src/components/Product.vue"],"sourcesContent":["<template>\n<div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n\nexport default {\n    data() {\n        return {\n            id: '',\n            products: [],\n            orders: [],\n            selectedProductId: '',\n        };\n    },\n    methods: {\n        decrement(index) {\n            if (this.products[index].bpm > 0) {\n                this.products[index].bpm--;\n            }\n        },\n        increment(index) {\n            const product = this.products[index];\n            if (product.bpm < product.amount) {\n                product.bpm++;\n            } else {\n                Swal.fire({\n                    title: \"ไม่สามารถเพิ่มเกินจำนวนที่มีอยู่ได้\",\n                    icon: \"info\",\n                    showConfirmButton: false,\n                    timer: 1000\n                });\n            }\n        },\n        fetchProducts() {\n            axios.get('http://localhost:3000/products')\n                .then(response => {\n                    this.products = response.data.data.map(product => ({\n                        ...product,\n                        bpm: 0,\n                    }));\n                    console.log(this.products);\n                })\n                .catch(error => {\n                    console.error('Error fetching products:', error);\n                });\n        },\n        addToOrder(index) {\n            const product = this.products[index];\n            if (product.bpm > 0) {\n                for (let i = 0; i < product.bpm; i++) {\n                    const orderItem = {\n                        productId: product._id,\n                        products_name: product.products_name,\n                        price: product.price,\n                        amount: product.amount,\n                        orderamount: product.bpm // กำหนด orderamount เป็น 1 เนื่องจากเพิ่ม order ต่อ 1 bpm\n                    };\n                    this.orders.push(orderItem);\n                }\n                this.products[index].bpm = 0; // รีเซ็ตค่า bpm เป็น 0 หลังจากที่เพิ่มในออร์เดอร์แล้ว\n                console.log(this.orders);\n                console.log('เพิ่มสินค้าลงในตะกร้า:', product);\n\n                // เรียกเมทอด saveOrder พร้อมส่ง productId ไป\n                this.saveOrder(product._id, this.orders);\n            } else {\n                Swal.fire({\n                    title: \"โปรดเลือกอย่างน้อยหนึ่งรายการเพื่อเพิ่มในการสั่งซื้อ\",\n                    icon: \"info\",\n                    showConfirmButton: false,\n                    timer: 1000\n                });\n            }\n        },\n        // อัปเดตค่าของ selectedProductId เมื่อผู้ใช้เลือกสินค้า\n        setSelectedProductId(productId) {\n            this.selectedProductId = productId;\n        },\n        async saveOrder(productId, orderItem) {\n            try {\n                const url = `http://localhost:3000/products/${productId}/orders`;\n                const response = await axios.post(url, orderItem); // ส่ง orderItem ที่มีค่า bpm ไป\n                console.log(response.data);\n                Swal.fire({\n                    title: \"เพิ่มคำสั่งซื้อเรียบร้อยแล้ว\",\n                    icon: \"success\",\n                    showConfirmButton: false,\n                    timer: 1000\n                });\n                this.orders = [];\n            } catch (error) {\n                console.error('Error creating order:', error.response ? error.response.data : error.message);\n                alert('error');\n            }\n        }\n    },\n    created() {\n        this.fetchProducts(); // Fetch products when the component is created\n    }\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Prompt:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n\n.font{\n    font-family: \"Prompt\", sans-serif;\n}\n</style>\n"],"mappings":";AAMA,OAAAA,KAAA;AACA,OAAAC,IAAA;AAEA;EACAC,KAAA;IACA;MACAC,EAAA;MACAC,QAAA;MACAC,MAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAC,UAAAC,KAAA;MACA,SAAAL,QAAA,CAAAK,KAAA,EAAAC,GAAA;QACA,KAAAN,QAAA,CAAAK,KAAA,EAAAC,GAAA;MACA;IACA;IACAC,UAAAF,KAAA;MACA,MAAAG,OAAA,QAAAR,QAAA,CAAAK,KAAA;MACA,IAAAG,OAAA,CAAAF,GAAA,GAAAE,OAAA,CAAAC,MAAA;QACAD,OAAA,CAAAF,GAAA;MACA;QACAT,IAAA,CAAAa,IAAA;UACAC,KAAA;UACAC,IAAA;UACAC,iBAAA;UACAC,KAAA;QACA;MACA;IACA;IACAC,cAAA;MACAnB,KAAA,CAAAoB,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA,KAAAlB,QAAA,GAAAkB,QAAA,CAAApB,IAAA,CAAAA,IAAA,CAAAqB,GAAA,CAAAX,OAAA;UACA,GAAAA,OAAA;UACAF,GAAA;QACA;QACAc,OAAA,CAAAC,GAAA,MAAArB,QAAA;MACA,GACAsB,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,6BAAAA,KAAA;MACA;IACA;IACAC,WAAAnB,KAAA;MACA,MAAAG,OAAA,QAAAR,QAAA,CAAAK,KAAA;MACA,IAAAG,OAAA,CAAAF,GAAA;QACA,SAAAmB,CAAA,MAAAA,CAAA,GAAAjB,OAAA,CAAAF,GAAA,EAAAmB,CAAA;UACA,MAAAC,SAAA;YACAC,SAAA,EAAAnB,OAAA,CAAAoB,GAAA;YACAC,aAAA,EAAArB,OAAA,CAAAqB,aAAA;YACAC,KAAA,EAAAtB,OAAA,CAAAsB,KAAA;YACArB,MAAA,EAAAD,OAAA,CAAAC,MAAA;YACAsB,WAAA,EAAAvB,OAAA,CAAAF,GAAA;UACA;UACA,KAAAL,MAAA,CAAA+B,IAAA,CAAAN,SAAA;QACA;QACA,KAAA1B,QAAA,CAAAK,KAAA,EAAAC,GAAA;QACAc,OAAA,CAAAC,GAAA,MAAApB,MAAA;QACAmB,OAAA,CAAAC,GAAA,2BAAAb,OAAA;;QAEA;QACA,KAAAyB,SAAA,CAAAzB,OAAA,CAAAoB,GAAA,OAAA3B,MAAA;MACA;QACAJ,IAAA,CAAAa,IAAA;UACAC,KAAA;UACAC,IAAA;UACAC,iBAAA;UACAC,KAAA;QACA;MACA;IACA;IACA;IACAoB,qBAAAP,SAAA;MACA,KAAAzB,iBAAA,GAAAyB,SAAA;IACA;IACA,MAAAM,UAAAN,SAAA,EAAAD,SAAA;MACA;QACA,MAAAS,GAAA,qCAAAR,SAAA;QACA,MAAAT,QAAA,SAAAtB,KAAA,CAAAwC,IAAA,CAAAD,GAAA,EAAAT,SAAA;QACAN,OAAA,CAAAC,GAAA,CAAAH,QAAA,CAAApB,IAAA;QACAD,IAAA,CAAAa,IAAA;UACAC,KAAA;UACAC,IAAA;UACAC,iBAAA;UACAC,KAAA;QACA;QACA,KAAAb,MAAA;MACA,SAAAsB,KAAA;QACAH,OAAA,CAAAG,KAAA,0BAAAA,KAAA,CAAAL,QAAA,GAAAK,KAAA,CAAAL,QAAA,CAAApB,IAAA,GAAAyB,KAAA,CAAAc,OAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAxB,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}