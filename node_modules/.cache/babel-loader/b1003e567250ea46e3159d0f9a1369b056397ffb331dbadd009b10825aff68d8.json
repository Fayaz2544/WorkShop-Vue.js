{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      id: '',\n      products: [],\n      orders: [],\n      selectedProductId: ''\n    };\n  },\n  methods: {\n    fetchProducts() {\n      axios.get('http://localhost:3000/products').then(response => {\n        this.products = response.data.data.map(product => ({\n          ...product\n        }));\n        console.log(this.products);\n      }).catch(error => {\n        console.error('Error fetching products:', error);\n      });\n    },\n    addToOrder(index) {\n      const product = this.products[index];\n      const order = {\n        productId: product._id,\n        products_name: product.products_name,\n        price: product.price,\n        orderamount: 1\n      };\n      // เพิ่มรายการสั่งซื้อใหม่เข้าไปใน orders โดยไม่เพิ่มรายการที่มีอยู่แล้ว\n      const existingOrderIndex = this.orders.findIndex(existingOrder => existingOrder.productId === product._id);\n      if (existingOrderIndex !== -1) {\n        this.orders[existingOrderIndex].orderamount++;\n      } else {\n        this.orders.push(order);\n      }\n      console.log(this.orders);\n      console.log('เพิ่มสินค้าลงในตะกร้า:', product);\n\n      // Call saveOrder with the productId\n      this.saveOrder(product._id);\n    },\n    async saveOrder(productId) {\n      try {\n        const url = `http://localhost:3000/products/${productId}/orders`;\n        const response = await axios.post(url, {\n          orders: this.orders\n        });\n        console.log(response.data);\n        alert('Order created successfully');\n        this.orders = [];\n      } catch (error) {\n        console.error('Error creating order:', error.response ? error.response.data : error.message);\n        alert('Error creating order');\n      }\n    },\n    incrementOrder(index) {\n      this.products[index].orderamount++;\n    },\n    decrementOrder(index) {\n      if (this.products[index].orderamount > 1) {\n        this.products[index].orderamount--;\n      }\n    },\n    getOrderQuantity(index) {\n      return this.products[index].orderamount || 1;\n    }\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  }\n};","map":{"version":3,"names":["axios","data","id","products","orders","selectedProductId","methods","fetchProducts","get","then","response","map","product","console","log","catch","error","addToOrder","index","order","productId","_id","products_name","price","orderamount","existingOrderIndex","findIndex","existingOrder","push","saveOrder","url","post","alert","message","incrementOrder","decrementOrder","getOrderQuantity","created"],"sources":["src/views/Product.vue"],"sourcesContent":["<template>\n<v-row justify=\"center\" class=\"space px-16\">\n    <v-col cols=\"12\" xs=\"12\" sm=\"6\" md=\"4\" v-for=\"(product, i) in products\" :key=\"i\">\n        <v-card class=\"mx-auto rounded-xl\" max-width=\"300\" color=\"\" flat outlined>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.img\"></v-img>\n            </div>\n            <div align=\"center\" justify=\"center\">\n                <v-img max-height=\"300\" max-width=\"300\" contain :src=\"product.menu\"></v-img>\n            </div>\n            <v-card-title>{{ product.products_name }}</v-card-title>\n            <v-card-title class=\"grey--text text-grey-darken-1 caption mt-n6\">\n                {{ product.subtitle }}\n            </v-card-title>\n            <v-card-title class=\"mt-n4\">{{ product.price }}</v-card-title>\n            <v-card-actions class=\"mx-2 mt-n4\">\n                <v-btn class=\"mx-2 mt-n3\" fab dark small color=\"green\" @click=\"addToOrder(i)\">\n                    <v-icon dark>fa fa-shopping-basket</v-icon>\n                </v-btn>\n                <v-btn icon @click=\"incrementOrder(i)\">\n                    <v-icon>mdi-plus</v-icon>\n                </v-btn>\n                <span>{{ getOrderQuantity(i) }}</span>\n                <v-btn icon @click=\"decrementOrder(i)\">\n                    <v-icon>mdi-minus</v-icon>\n                </v-btn>\n            </v-card-actions>\n        </v-card>\n    </v-col>\n</v-row>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      id: '',\n      products: [],\n      orders: [],\n      selectedProductId: '',\n    };\n  },\n  methods: {\n    fetchProducts() {\n      axios\n        .get('http://localhost:3000/products')\n        .then((response) => {\n          this.products = response.data.data.map((product) => ({\n            ...product,\n          }));\n          console.log(this.products);\n        })\n        .catch((error) => {\n          console.error('Error fetching products:', error);\n        });\n    },\n    addToOrder(index) {\n      const product = this.products[index];\n      const order = {\n        productId: product._id,\n        products_name: product.products_name,\n        price: product.price,\n        orderamount: 1,\n      };\n      // เพิ่มรายการสั่งซื้อใหม่เข้าไปใน orders โดยไม่เพิ่มรายการที่มีอยู่แล้ว\n      const existingOrderIndex = this.orders.findIndex(\n        (existingOrder) => existingOrder.productId === product._id\n      );\n      if (existingOrderIndex !== -1) {\n        this.orders[existingOrderIndex].orderamount++;\n      } else {\n        this.orders.push(order);\n      }\n      console.log(this.orders);\n      console.log('เพิ่มสินค้าลงในตะกร้า:', product);\n\n      // Call saveOrder with the productId\n      this.saveOrder(product._id);\n    },\n    async saveOrder(productId) {\n      try {\n        const url = `http://localhost:3000/products/${productId}/orders`;\n        const response = await axios.post(url, {\n          orders: this.orders,\n        });\n        console.log(response.data);\n        alert('Order created successfully');\n        this.orders = [];\n      } catch (error) {\n        console.error(\n          'Error creating order:',\n          error.response ? error.response.data : error.message\n        );\n        alert('Error creating order');\n      }\n    },\n    incrementOrder(index) {\n      this.products[index].orderamount++;\n    },\n    decrementOrder(index) {\n      if (this.products[index].orderamount > 1) {\n        this.products[index].orderamount--;\n      }\n    },\n    getOrderQuantity(index) {\n      return this.products[index].orderamount || 1;\n    },\n  },\n  created() {\n    this.fetchProducts(); // Fetch products when the component is created\n  },\n};\n</script>\n"],"mappings":";AAiCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,EAAA;MACAC,QAAA;MACAC,MAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA;MACAP,KAAA,CACAQ,GAAA,mCACAC,IAAA,CAAAC,QAAA;QACA,KAAAP,QAAA,GAAAO,QAAA,CAAAT,IAAA,CAAAA,IAAA,CAAAU,GAAA,CAAAC,OAAA;UACA,GAAAA;QACA;QACAC,OAAA,CAAAC,GAAA,MAAAX,QAAA;MACA,GACAY,KAAA,CAAAC,KAAA;QACAH,OAAA,CAAAG,KAAA,6BAAAA,KAAA;MACA;IACA;IACAC,WAAAC,KAAA;MACA,MAAAN,OAAA,QAAAT,QAAA,CAAAe,KAAA;MACA,MAAAC,KAAA;QACAC,SAAA,EAAAR,OAAA,CAAAS,GAAA;QACAC,aAAA,EAAAV,OAAA,CAAAU,aAAA;QACAC,KAAA,EAAAX,OAAA,CAAAW,KAAA;QACAC,WAAA;MACA;MACA;MACA,MAAAC,kBAAA,QAAArB,MAAA,CAAAsB,SAAA,CACAC,aAAA,IAAAA,aAAA,CAAAP,SAAA,KAAAR,OAAA,CAAAS,GACA;MACA,IAAAI,kBAAA;QACA,KAAArB,MAAA,CAAAqB,kBAAA,EAAAD,WAAA;MACA;QACA,KAAApB,MAAA,CAAAwB,IAAA,CAAAT,KAAA;MACA;MACAN,OAAA,CAAAC,GAAA,MAAAV,MAAA;MACAS,OAAA,CAAAC,GAAA,2BAAAF,OAAA;;MAEA;MACA,KAAAiB,SAAA,CAAAjB,OAAA,CAAAS,GAAA;IACA;IACA,MAAAQ,UAAAT,SAAA;MACA;QACA,MAAAU,GAAA,qCAAAV,SAAA;QACA,MAAAV,QAAA,SAAAV,KAAA,CAAA+B,IAAA,CAAAD,GAAA;UACA1B,MAAA,OAAAA;QACA;QACAS,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAT,IAAA;QACA+B,KAAA;QACA,KAAA5B,MAAA;MACA,SAAAY,KAAA;QACAH,OAAA,CAAAG,KAAA,CACA,yBACAA,KAAA,CAAAN,QAAA,GAAAM,KAAA,CAAAN,QAAA,CAAAT,IAAA,GAAAe,KAAA,CAAAiB,OACA;QACAD,KAAA;MACA;IACA;IACAE,eAAAhB,KAAA;MACA,KAAAf,QAAA,CAAAe,KAAA,EAAAM,WAAA;IACA;IACAW,eAAAjB,KAAA;MACA,SAAAf,QAAA,CAAAe,KAAA,EAAAM,WAAA;QACA,KAAArB,QAAA,CAAAe,KAAA,EAAAM,WAAA;MACA;IACA;IACAY,iBAAAlB,KAAA;MACA,YAAAf,QAAA,CAAAe,KAAA,EAAAM,WAAA;IACA;EACA;EACAa,QAAA;IACA,KAAA9B,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}